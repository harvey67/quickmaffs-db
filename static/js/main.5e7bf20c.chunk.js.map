{"version":3,"sources":["firebase.js","Home.js","Nav.js","Dashboard.js","CreateAccount.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Home","correctAns","useState","email","setEmail","isMountedRef","useRef","getRandomNumber","Math","floor","random","makeQuestion","document","querySelectorAll","style","display","getElementById","value","disabled","x","y","console","log","questionText","innerHTML","a","uA","cA","String","result","u_id","firestore","collection","where","get","then","snapshot","docs","forEach","doc","push","data","user_id","length","question_id","size","correct_answer","user_answer","add","useEffect","current","auth","onAuthStateChanged","user","className","id","autoComplete","onClick","Nav","signOut","to","Dashboard","num_correct","total","showResults","num_c","tot","correctText","incorrectText","totalText","getResults","color","CreateAccount","password","setPassword","password2","setPassword2","e","preventDefault","pass","includes","createUserWithEmailAndPassword","cred","catch","error","errorCode","code","errorMessage","message","onSubmit","type","onChange","currentTarget","Login","signInWithEmailAndPassword","App","path","component","exact","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e7bf20c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAHN7qi76sqh-ZHSlAGryJEbTvxcsvFJaY\",\r\n    authDomain: \"user-database-test-9ee1d.firebaseapp.com\",\r\n    databaseURL: \"https://user-database-test-9ee1d.firebaseio.com\",\r\n    projectId: \"user-database-test-9ee1d\",\r\n    storageBucket: \"user-database-test-9ee1d.appspot.com\",\r\n    messagingSenderId: \"425239506606\",\r\n    appId: \"1:425239506606:web:decf3cc0780d2d8e9d073f\"\r\n};\r\n\r\n//const fire = firebase.initializeApp(firebase);\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, {useEffect, useState, useRef} from 'react';\r\nimport firebase from './firebase';\r\n\r\nconst Home = () => {\r\n    let correctAns = 0;\r\n    const [email, setEmail] = useState('');\r\n    const isMountedRef = useRef(null);\r\n    \r\n    useEffect(() => {\r\n      isMountedRef.current = true;\r\n      firebase.auth().onAuthStateChanged(function(user) {\r\n          if (user) {\r\n            if(isMountedRef.current) {\r\n              setEmail(user.email);\r\n              makeQuestion();\r\n            }\r\n          } else {\r\n            if(isMountedRef.current) {\r\n              setEmail('');\r\n              noUser();\r\n            }\r\n          }\r\n      });\r\n      return () => isMountedRef.current = false;\r\n    });  \r\n    function noUser() {\r\n      document.querySelectorAll(\".workspace\")[0].style.display = \"none\";\r\n    }\r\n    function getRandomNumber() {\r\n      let n = Math.floor(Math.random() * 10) + 1;\r\n      return n;\r\n    }\r\n    function makeQuestion() {\r\n      document.querySelectorAll(\".workspace\")[0].style.display = \"block\";\r\n      document.getElementById(\"userAnswerID\").value = \"\";\r\n      document.getElementById(\"submitAnswerID\").disabled = false;\r\n      document.getElementById(\"nextBtnID\").style.display = \"none\";\r\n      let x = getRandomNumber();\r\n      let y = getRandomNumber();\r\n      correctAns = x * y;\r\n      console.log(\"correct answer is \" + correctAns);\r\n      let questionText = \"what is \" + x + \" x \" + y + \" = \";\r\n      document.getElementById(\"questionStringID\").innerHTML = questionText;\r\n    }\r\n    async function checkAns() {\r\n      let uA = document.getElementById(\"userAnswerID\").value;\r\n      console.log(\"user answer is \" + uA);\r\n      let cA = String(correctAns);\r\n      let result = 0;\r\n      if (cA === uA) {\r\n        console.log(\"YOU ARE CORRECT\");      \r\n        result = 1;\r\n      } else {\r\n        console.log(\"DUMBCUNT\");\r\n      }\r\n      document.getElementById(\"submitAnswerID\").disabled = true;\r\n      document.getElementById(\"nextBtnID\").style.display = \"block\";\r\n      \r\n      let u_id = [];\r\n      await firebase.firestore().collection('math-user-db').where(\"email\", \"==\", email).get().then((snapshot) => {\r\n        console.log(\"working\");\r\n          snapshot.docs.forEach(doc => {\r\n            u_id.push(doc.data().user_id)\r\n          });            \r\n      });\r\n      if (u_id.length > 1) {\r\n        console.log(\"error: we have multiple of that email\");\r\n        console.log(u_id);\r\n      } else {\r\n        let user_id = u_id[0];\r\n        let question_id = 0;      \r\n        await firebase.firestore().collection('math-question-db').get().then((snapshot) => {\r\n          question_id = snapshot.size;\r\n        });\r\n        question_id += 1;\r\n        let correct_answer = cA;\r\n        let user_answer = uA;\r\n        console.log(\"the user_id is \" + user_id);\r\n        console.log(\"the question_id is \" + question_id);\r\n        console.log(\"the correct_answer is \" + correct_answer);\r\n        console.log(\"the user_answer is \" + user_answer);\r\n        console.log(\"the result is \" + result);\r\n        // add to database            \r\n        firebase.firestore().collection('math-question-db').add({\r\n          question_id,\r\n          user_id,\r\n          correct_answer,\r\n          user_answer,\r\n          result\r\n        })\r\n        .then(() => {\r\n        });\r\n      }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Home\">        \r\n            <br /><br />\r\n            <h1>Home page</h1>\r\n            <div className=\"workspace\" style={{display: \"none\"}}>\r\n                <p id=\"questionStringID\"></p>\r\n                <input id=\"userAnswerID\" autoComplete=\"off\"></input>\r\n                <button id=\"submitAnswerID\" onClick={checkAns}>submit</button>\r\n                <button id=\"nextBtnID\" onClick={makeQuestion} style={{display: \"none\"}}>next</button>\r\n            </div>\r\n        </div>      \r\n    );\r\n  }\r\n  export default Home;","import React, {useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from './firebase';\r\n\r\nconst Nav = () => {\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                document.getElementById(\"UserDetails\").style.display = \"block\";\r\n                document.getElementById(\"UserDetails\").innerHTML = user.email;\r\n            } else {\r\n                document.getElementById(\"UserDetails\").style.display = \"none\";\r\n                document.getElementById(\"UserDetails\").innerHTML = \"\";\r\n            }\r\n        });\r\n    });\r\n\r\n    async function signOut() {        \r\n        await firebase.auth().signOut().then(() => {\r\n            console.log(\"user is signed out\");\r\n        });\r\n    }\r\n    return (\r\n      <div className=\"Nav\">\r\n          <li className=\"LinkBtn\"><Link to=\"/\">Home</Link></li>\r\n          <li className=\"LinkBtn\"><Link to=\"/Dashboard\">Dashboard</Link></li>\r\n          <li className=\"LinkBtn\"><Link to=\"/CreateAccount\">Create Account</Link></li>\r\n          <li className=\"LinkBtn\"><Link to=\"/Login\">Login</Link></li>\r\n          <li className=\"LinkBtn\" ><button id=\"LogoutBtnID\" onClick={signOut}>Logout</button></li>\r\n          <li className=\"LinkBtn\" id=\"UserDetails\" style={{display: \"none\"}}></li>\r\n          \r\n      </div>      \r\n    );\r\n  }\r\n\r\nexport default Nav;\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport firebase from './firebase';\r\n\r\nconst Dashboard = () => {\r\n    const [email, setEmail] = useState('');\r\n    const isMountedRef = useRef(null);\r\n    \r\n    useEffect(() => {\r\n      isMountedRef.current = true;\r\n      firebase.auth().onAuthStateChanged(function(user) {\r\n          if (user) {\r\n            if(isMountedRef.current) {\r\n              setEmail(user.email);\r\n              getResults();\r\n            }\r\n          } else {\r\n            if(isMountedRef.current) {\r\n              setEmail('');\r\n              noUser();\r\n            }\r\n          }\r\n      });\r\n      return () => isMountedRef.current = false;\r\n    }); \r\n    \r\n    function noUser() {\r\n        document.querySelectorAll(\".results\")[0].style.display = \"none\";\r\n    }\r\n\r\n    async function getResults() {        \r\n        let user_id;\r\n        await firebase.firestore().collection('math-user-db').where(\"email\", \"==\", email).get().then((snapshot) => {\r\n            snapshot.docs.forEach(doc => {\r\n                user_id = doc.data().user_id;\r\n            });\r\n        });\r\n        let num_correct = 0;\r\n        let total = 0;\r\n        if (user_id) {\r\n            await firebase.firestore().collection('math-question-db').where(\"user_id\", \"==\", user_id).get().then((snapshot) => {\r\n                snapshot.docs.forEach(doc => {\r\n                    if (doc.data().result === 1) {\r\n                        num_correct += 1;\r\n                    }\r\n                    total += 1;\r\n                });\r\n            });\r\n            showResults(num_correct, total);\r\n        }\r\n    }\r\n    function showResults(num_c, tot) {\r\n        document.querySelectorAll(\".results\")[0].style.display = \"block\";\r\n        let correctText = \"You scored \" + num_c + \" correct\";\r\n        let incorrectText = \"You scored \" + (tot - num_c) + \" incorrect\";\r\n        let totalText = \"Score is \" + Math.floor(100 * num_c / tot) + \"%\";\r\n        document.getElementById(\"correct\").innerHTML = correctText;\r\n        document.getElementById(\"incorrect\").innerHTML = incorrectText;\r\n        document.getElementById(\"total\").innerHTML = totalText;\r\n    }\r\n    return (\r\n        <div className=\"Dashboard\">\r\n            <br /><br />\r\n            <h1>Dashboard</h1>\r\n            <div className=\"results\" style={{display: \"none\"}}>\r\n                <p id=\"correct\" style={{color: \"green\"}}></p>\r\n                <p id=\"incorrect\" style={{color: \"red\"}}></p>\r\n                <p id=\"total\"></p>\r\n            </div>\r\n        </div>      \r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {useState} from 'react';\r\nimport firebase from './firebase';\r\n\r\nconst CreateAccount = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    \r\n    async function addUser(e) {\r\n        e.preventDefault();\r\n        // check that fields are not blank\r\n        document.getElementById(\"errorID\").innerHTML = \"\";\r\n        let pass = 1;\r\n        if (email === \"\") {\r\n            document.getElementById(\"errorID\").innerHTML += \"<br> email cannot be blank\";\r\n            pass = 0;\r\n            setEmail('');\r\n        }\r\n        if (password === \"\" || password2 === \"\") {\r\n            document.getElementById(\"errorID\").innerHTML += \"<br> password cannot be blank\";\r\n            pass = 0;\r\n        }\r\n\r\n        // check that passwords match\r\n        if (password !== password2) {\r\n            document.getElementById(\"errorID\").innerHTML += \"<br> passwords dont match\";\r\n            pass = 0;\r\n        }\r\n\r\n        // check that passwords > 6 characters\r\n        if (password.length < 6) {\r\n            document.getElementById(\"errorID\").innerHTML += \"<br> passwords must be > 6 characters\";\r\n            pass = 0;\r\n        }\r\n\r\n        // check that email is valid\r\n        if (!email.includes(\"@\")) {\r\n            document.getElementById(\"errorID\").innerHTML += \"<br> \" + email + \" is an invalid email\";\r\n            pass = 0;\r\n        }\r\n\r\n        // check if we already have that email\r\n        let user_id = 0;\r\n        await firebase.firestore().collection('math-user-db').get().then((snapshot) => {\r\n            snapshot.docs.forEach(doc => {\r\n                //console.log(\"email is \" + doc.data().email);\r\n                user_id += 1;\r\n                if (email === doc.data().email) {\r\n                    document.getElementById(\"errorID\").innerHTML += \"<br> we already have an account for \" + email;\r\n                    pass = 0;\r\n                }\r\n            });\r\n        });\r\n\r\n        user_id += 1;\r\n        \r\n        if (pass === 1) {\r\n            // add to database\r\n            firebase.firestore().collection('math-user-db').add({email, password, user_id}).then(() => {\r\n                setEmail('')\r\n                setPassword('')\r\n            });\r\n\r\n            // authenticate user\r\n            let errorCode, errorMessage;\r\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(cred => {\r\n                console.log(cred.user);\r\n            }).catch(function(error) {\r\n                errorCode = error.code;\r\n                errorMessage = error.message;\r\n            });\r\n            if (errorCode) {\r\n                document.getElementById(\"errorID\").innerHTML = errorCode;\r\n                document.getElementById(\"errorID\").innerHTML += \"<br>\" + errorMessage;\r\n            }\r\n        }\r\n        \r\n        setPassword('');\r\n        setPassword2('');\r\n    }\r\n    return (\r\n        <div className=\"CreateAccount\">\r\n            <br /><br />\r\n            <h1>CreateAccount</h1>\r\n            <p id=\"errorID\" style={{color : \"red\"}}></p>\r\n            <form onSubmit={addUser}>\r\n                <label>email:</label><br />                \r\n                <input type=\"text\" value={email} onChange={e => setEmail(e.currentTarget.value)}/><br /><br />\r\n                <label>password:</label><br />                \r\n                <input type=\"password\" value={password} onChange={e => setPassword(e.currentTarget.value)}/><br /><br />\r\n                <label>password confirm:</label><br />                \r\n                <input type=\"password\" value={password2} onChange={e => setPassword2(e.currentTarget.value)}/><br /><br />\r\n                <button>create account</button>\r\n            </form>\r\n        </div>      \r\n    );\r\n}\r\n\r\nexport default CreateAccount;\r\n","import React, {useState} from 'react';\r\nimport firebase from './firebase';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    \r\n    async function loginUser(e) {\r\n        e.preventDefault();\r\n        let errorCode, errorMessage;\r\n        await firebase.auth().signInWithEmailAndPassword(email, password).then(cred => {\r\n            console.log(cred.user)\r\n        }).catch(function(error) {\r\n            errorCode = error.code;\r\n            errorMessage = error.message;\r\n        });\r\n        if (errorCode) {\r\n            document.getElementById(\"errorID\").innerHTML = errorCode;\r\n            document.getElementById(\"errorID\").innerHTML += \"<br>\" + errorMessage;\r\n        }\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <br /><br />\r\n            <h1>Login</h1>\r\n            <form onSubmit={loginUser}>\r\n                <p id=\"errorID\" style={{color : \"red\"}}></p>\r\n                <label>email:</label><br />                \r\n                <input type=\"text\" value={email} onChange={e => setEmail(e.currentTarget.value)}/><br /><br />\r\n                <label>password:</label><br />                \r\n                <input type=\"password\" value={password} onChange={e => setPassword(e.currentTarget.value)}/><br /><br />\r\n                <button>login</button>\r\n            </form>\r\n        </div>      \r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Home from './Home';\nimport Nav from './Nav';\nimport Dashboard from './Dashboard';\nimport CreateAccount from './CreateAccount';\nimport Login from './Login';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Nav />\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/Dashboard\" component={Dashboard} exact />\n            <Route path=\"/CreateAccount\" component={CreateAccount} exact />\n            <Route path=\"/Login\" component={Login} exact />\n          </Switch>\n        </BrowserRouter>\n      </div>\n  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}